// Содержимое файла FieldReactColour.js
import * as Blockly from 'blockly/core';
export class FieldReactColour extends Blockly.Field { SERIALIZABLE = true; EDITABLE = true; static fromJson(json) { return new FieldReactColour(json['colour']); } constructor(value = '#ffffff', validator = null) { super(value, validator); } initView() { this.fieldGroup_ = Blockly.utils.dom.createSvgElement('g', {}, this.getSvgRoot()); this.borderElement_ = Blockly.utils.dom.createSvgElement('rect', { 'rx': 4, 'ry': 4, 'width': 24, 'height': 24, 'fill': '#fff', 'stroke': '#ccc' }, this.fieldGroup_); this.colourElement_ = Blockly.utils.dom.createSvgElement('rect', { 'rx': 2, 'ry': 2, 'x': 2, 'y': 2, 'width': 20, 'height': 20 }, this.fieldGroup_); this.getSvgRoot().style.cursor = 'pointer'; this.render_(); } render_() { if (!this.colourElement_) return; this.colourElement_.setAttribute('fill', this.getValue()); } showEditor_() { const openPicker = this.getSourceBlock()?.workspace?.openReactColourPicker; if (openPicker && typeof openPicker === 'function') { openPicker(this.getValue(), (newValue) => { this.setValue(newValue); }); } else { console.error('Критическая ошибка: функция openReactColourPicker не прикреплена к workspace!'); } } }
Blockly.fieldRegistry.register('field_react_colour', FieldReactColour);